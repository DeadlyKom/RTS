
                ifndef _CORE_MODULE_UTILS_CHUNK_ARRAY_MOVE_
                define _CORE_MODULE_UTILS_CHUNK_ARRAY_MOVE_
; -----------------------------------------
; переместить значение в другой чанк
; In:
;   H  - старший байт адрес массива чанков (выровненый 256 байт)
;   D  - перемещяемое значение
;   B  - номер чанка источника  [0..127]
;   A' - номер чанка назначения [0..127]
; Out:
; Corrupt:
; Note:
; -----------------------------------------
Move:           ; определения прямой или обратное перемещение в массиве
                LD A, D                                                         ; сохранение перемещяемое значение
                EX AF, AF'
                LD C, A
                JR NC, .IsForward

.IsReverse      ; обратное перемещение в массиве
                ; B  - номер чанка источника  [0..127]
                ; С  - номер чанка назначения [0..127]
                ; A' - перемещаемое значение

                ; расчёт смещение от текущего адреса в массиве
                LD A, B
                SUB C
                LD E, A

                ; E  - количество проходимых элементов
                ; B  - номер чанка источника  [0..127]
                ; C  - номер чанка назначения [0..127]

                ; расчёт начальных адресов расположения юнитов в указаном чанке
                LD L, #80
                LD A, C
                CALL GetAddress
                PUSH HL                                                         ; сохранение адреса нового счётчика
                LD L, A

                ; HL - начальный адрес счётчиков юнитов в указанном чанке
                ; A  - количествой пройденых элементов/начальный адрес расположения элементов
                ; B  - обнулён

                ; подготовка, получения адреса назначения
                LD A, E
                EX DE, HL
                POP HL
                PUSH HL

                ; расчёт конечных адресов расположения юнитов в указаном чанке
                CALL GetAddress
                
                ; HL - начальный адрес счётчиков юнитов в указанном чанке
                ; A  - количествой пройденых элементов/начальный адрес расположения элементов
                ; B  - обнулён

                ; уменьшение счётчика элементов в старом чанке
                LD C, (HL)                                                      ; количество элементов в старом чанке
                DEC (HL)
                LD L, A
                JR Z, .L1

                ; поиск перемещяемого значения
                EX AF, AF'
                EX DE, HL
                CPIR
                DEBUG_BREAK_POINT_NZ                                            ; ошибка поиска!
                DEC L
                EX AF, AF'

.L1             ; HL - адрес перемещаемого элемента
                ; DE - адрес назначения перемещения
                ; A  - копия регистра L

                ; корректировка нового счётчика
                EX (SP), HL
                INC (HL)                                                        ; увеличение счётчика элементов в новом чанке
                POP HL                                                          ; HL - адрес перемещяемого элемента

                ; премещение блока
                LD A, L
                SUB E
                RET Z
                RET M
                LD C, A
                EX AF, AF'                                                      ; восстановление
                EX DE, HL
                LDDR

                ; сохранение перемещаемого значения
                INC HL
                LD (HL), A
                RET

.IsForward      ; прямое перемещение в массиве
                ; B  - номер чанка источника  [0..127]
                ; С  - номер чанка назначения [0..127]
                ; A' - перемещаемое значение

                ; расчёт смещение от текущего адреса в массиве
                SUB B
                LD E, A

                ; E  - количество проходимых элементов
                ; B  - номер чанка источника  [0..127]
                ; C  - номер чанка назначения [0..127]

                ; расчёт адреса расположения перемещаемого элемента
                LD L, #80
                LD A, B
                CALL GetAddress
                PUSH HL                                                         ; сохранение адреса старого счётчика

                ; HL - начальный адрес счётчиков юнитов в указанном чанке
                ; A  - количествой пройденых элементов/начальный адрес расположения элементов
                ; B  - обнулён

                ; подготовка поиска переносимого элемента
                LD C, (HL)                                                      ; количество элементов в старом чанке
                LD L, A
                DEC C
                JR Z, .L2

                ; поиск перемещяемого значения
                INC C
                EX AF, AF'
                CPIR
                DEBUG_BREAK_POINT_NZ                                            ; ошибка поиска!
                DEC L
                EX AF, AF'
                
.L2             ; HL - адрес перемещаемого элемента

                ; подготовка, получения адреса назначения
                LD A, E
                EX DE, HL
                POP HL
                PUSH HL

                ; расчёт конечных адресов расположения юнитов в указаном чанке
                DEC (HL)                                                        ; уменьшение счётчика элементов в новом чанке
                CALL GetAddress

                ; HL - начальный адрес счётчиков юнитов в указанном чанке
                ; A  - количествой пройденых элементов/начальный адрес расположения элементов
                ; B  - обнулён

                ; корректировка счётчиков
                EX (SP), HL
                POP HL
                INC (HL)                                                        ; увеличение счётчика элементов в старом чанке
                LD L, A

                ; HL - адрес назначения перемещения
                ; DE - адрес перемещаемого элемента
                ; A  - копия регистра L

                ; премещение блока
                SUB E
                RET Z
                RET M
                LD C, A
                LDIR

                ; сохранение перемещаемого значения
                DEC L
                EX AF, AF'
                LD (HL), A
                RET

                endif ; ~ _CORE_MODULE_UTILS_CHUNK_ARRAY_MOVE_
