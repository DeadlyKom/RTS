
                ifndef _CORE_MODULE_DRAW_SPRITE_UNIT_DRAW_SPRITE_
                define _CORE_MODULE_DRAW_SPRITE_UNIT_DRAW_SPRITE_
; -----------------------------------------
; отображение спрайта без атрибутов
; In:
; BC  - размер спрайта (B - изначальная/изменённая ширина, C - изначальная/изменённая высота) в пикселях
; HL' - адрес экрана вывода
; DE' - изначальный/изменённый адрес спрайта
; В'  - старший байт адреса таблицы сдвига
; С'  - количество пропускаемых байт, для спрайтов с общей маской
; Out:
; Corrupt:
; Note:
; -----------------------------------------
Draw:           ; подготовка
                EXX
                PUSH HL                                                         ; сохранение адреса экрана
                PUSH DE
                LD H, B                                                         ; перенос старшего байт адреса таблицы сдвига
                LD B, #00                                                       ; BC хранит количество пропускаемых байт, для спрайтов с общей маской
                EXX
                POP DE
                PUSH BC                                                         ; сохранение размера спрайта

                CALL Memcpy.Sprite                                              ; копирование спрайта в буфер
                SET_PAGE_SHADOW_SCREEN                                          ; установка страницы не видимого экрана

                POP BC                                                          ; восстановление размера спрайта
                POP DE                                                          ; восстановление адреса экрана
                PUSH BC                                                         ; сохранение размера спрайта
                PUSH DE                                                         ; сохранение адреса экрана
                
                ; защитная от порчи данных с разрешённым прерыванием
                RestoreBC
                LD (.ContainerSP), SP
                LD SP, HL

                ; подготовка вывода
                LD L, E
                LD A, #F8
                AND D
                LD H, A
                SUB D
                ADD A, #08
                LD B, A
                JP (IX)                                                         ; отобращение спрайта

.Exit           ;
.ContainerSP    EQU $+1
                LD SP, #0000

                ; ToDo
                ; возможно не требует обновление спрайтов, после скрола карты
                ; на 2 фрейма

                ; -----------------------------------------
                ; автоматический расчёт и отметка грязных тайлов
                ; -----------------------------------------

                POP HL                                                          ; восстановление адреса экрана
                POP BC                                                          ; восстановление размера спрайта

                ; корректировка высоты, если спрайт не выровнен знакоместу по вертикали     (точная)
                LD A, H
                AND #07
                XOR L
                AND %11011111
                XOR L
                JR Z, $+3
                INC C

                ; корректировка высоты, если спрайт не выровнен знакоместу по горизонтали   (грубая)
                INC B

                ; расчёт адреса буфера рендера
                LD A, L
                RRA
                LD E, A
                RRA
                XOR E
                AND %00110000
                XOR E
                LD E, A
                LD A, H
                ADD A, A
                ADD A, A
                ADD A, A
                XOR E
                AND %11000000
                XOR E
                LD L, A
                LD H, HIGH RenderBuffer

                ; инициализация
                LD D, #00       

                ; округление до знакоместа ширины спрайта
                LD A, B
                RRA
                ADC A, D
                RRA
                ADC A, D
                RRA
                ADC A, D
                RRA
                ADC A, D
                LD B, A

                ; округление до знакоместа высоты спрайта
                LD A, C
                RRA
                ADC A, D
                RRA
                ADC A, D
                RRA
                ADC A, D
                RRA
                ADC A, D
                LD C, A

                ; инициализация
                LD D, B                                                         ; сохранение ширины

.Loop           ; основной цикл отмечания грязных тайлов
                SET FIRST_QUEUE_BIT, (HL)
                INC L
                DJNZ .Loop

                ; переход к следующей строке в рендер буфере
                LD A, L
                SUB D
                ADD A, #10
                LD L, A

                ; переход к следующей строке
                LD B, D
                DEC C
                JR NZ, .Loop

                RET

                display " - Draw Sprite: \t\t\t", /A, Draw, " = busy [ ", /D, $ - Draw, " bytes  ]"

                endif ; ~ _CORE_MODULE_DRAW_SPRITE_UNIT_DRAW_SPRITE_
